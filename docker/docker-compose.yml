x-proxy-settings: &proxy-settings
  HTTP_PROXY: ${HTTP_PROXY}
  HTTPS_PROXY: ${HTTPS_PROXY}
  NO_PROXY: "localhost,127.0.0.1,web,nginx,redis,db,.demo_network"

services:
  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      args:
        USERID: ${USERID}
        PORT: ${DJANGO_PORT}
    volumes:
      - ${DATA_FOLDER}:/data
    env_file:
      - ../front/.env
      - ./.env
    environment:
      <<: *proxy-settings
    ports:
      - "${DJANGO_PORT:-8000}:${DJANGO_PORT:-8000}"
    depends_on:
      - db
      - redis
    networks:
      - demo_network
    restart: unless-stopped

  db:
    image: postgres:13
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - ../front/.env
#    environment:
#      POSTGRES_USER: ${POSTGRES_USER}
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - demo_network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:latest
    env_file:
      - ../front/.env
      - ./.env
    ports:
      - "${NGINX_PORT:-8080}:${NGINX_PORT:-8080}"
    environment:
      <<: *proxy-settings
      PROD_URL: ${PROD_URL:-localhost}
      NGINX_PORT: ${NGINX_PORT:-8080}
    volumes:
      - ./nginx_conf:/etc/nginx/nginx.conf:ro
#      - ../front/staticfiles:/home/aikon-demo/staticfiles:ro
      - ${DATA_FOLDER}:/data:ro
      - /etc/ssl:/etc/ssl:ro
    depends_on:
      - web
    networks:
      - demo_network
    restart: unless-stopped

  redis:
    image: redis:6
    volumes:
      - redisdata:/data
    networks:
      - demo_network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
  redisdata:

networks:
  demo_network:
    driver: bridge
